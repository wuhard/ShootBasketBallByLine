{"version":3,"sources":["LevelDataManager.ts"],"names":[],"mappings":";;;;;AAAA,yCAAoC;AAIpC,oBAAoB;AACpB,iFAAiF;AACjF,yFAAyF;AACzF,mBAAmB;AACnB,2FAA2F;AAC3F,mGAAmG;AACnG,8BAA8B;AAC9B,2FAA2F;AAC3F,mGAAmG;AAE7F,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAQ,CAAkB;AAC1C,IAAI,OAAO,GAAS,EAAG,CAAC,OAAO,CAAC;AAGhC;IAA8C,oCAA2B;IADzE;QAAA,qEAsEC;QAnES,eAAS,GAAoB,EAAE,CAAC;;IAmE1C,CAAC;IAhEG,gCAAK,GAAL;QACI,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;IAE/B,CAAC;IAED,QAAQ;IACR,mCAAQ,GAAR,UAAS,SAAgB;QAAzB,iBAcC;QAbG,IAAI,QAAQ,GAAG,OAAO,GAAG,SAAS,CAAC;QACnC,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,UAAC,GAAG,EAAE,MAAM;gBACpC,IAAI,GAAG,EAAE;oBACL,MAAM,CAAC,GAAG,CAAC,CAAC;iBACf;qBAAM;oBACH,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC;oBACxB,EAAE,CAAC,GAAG,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;oBACpD,EAAE,CAAC,GAAG,CAAC,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;oBAC/B,yDAAyD;iBAC3D;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,uCAAY,GAAnB,UAAoB,UAAiB;QAEjC,OAAO,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC;IAC1E,CAAC;IAEM,yCAAc,GAArB;QAEI,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;IACjC,CAAC;IAED,WAAW;IACJ,4CAAiB,GAAxB,UAAyB,UAAiB;QAEtC,OAAO,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,CAAC;IACzE,CAAC;IAGM,iDAAsB,GAA7B,UAA8B,UAAiB;QAE3C,OAAO,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,CAAC;IACzE,CAAC;IAGM,mDAAwB,GAA/B,UAAgC,UAAiB;QAE7C,OAAO,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,CAAC;IAC3E,CAAC;IAGD,UAAU;IACH,8CAAmB,GAA1B,UAA2B,GAAU;QAEjC,IAAI,GAAG,GAAc,EAAE,CAAC;QACxB,IAAI,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC5B,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EACrC;YACI,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAC/B;QAED,OAAO,GAAG,CAAC;IACf,CAAC;IAnEgB,gBAAgB;QADpC,OAAO;OACa,gBAAgB,CAqEpC;IAAD,uBAAC;CArED,AAqEC,CArE6C,mBAAS,GAqEtD;kBArEoB,gBAAgB","file":"","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["import Singleton from \"./Singleton\";\r\nimport ProduceBasketManager from \"./ProduceBasketManager\";\r\nimport SceneLevelData from \"./SceneLevelData\";\r\n\r\n// Learn TypeScript:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst {ccclass, property} = cc._decorator;\r\nlet talefun = (<any>cc).talefun;\r\n\r\n@ccclass\r\nexport default class LevelDataManager extends Singleton<LevelDataManager> {\r\n\r\n   public levelData:SceneLevelData[] = [];\r\n\r\n\r\n    start () {\r\n        this.LoadJson(\"LevelData\");\r\n      \r\n    }\r\n\r\n    //读取关卡数据\r\n    LoadJson(json_name:string) {\r\n        let json_url = 'json/' + json_name;\r\n        return new Promise((resolve, reject) => {\r\n            cc.loader.loadRes(json_url, (err, object) => {\r\n                if (err) {\r\n                    reject(err);\r\n                } else {\r\n                    this.levelData = object;\r\n                    cc.log(this.levelData[0].basketInfors[0].baksetPos);\r\n                    cc.log(this.levelData.length);\r\n                   // this.StringToNumberArray(this.levelData[0].basketPos);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    \r\n    public GetBasketPos(levelIndex:number):number[]\r\n    {\r\n        return this.StringToNumberArray(this.levelData[levelIndex].basketPos);\r\n    }\r\n\r\n    public GetLevelLength():number\r\n    {\r\n        return this.levelData.length;\r\n    }\r\n\r\n    ///获取球射击的位置\r\n    public GetBallAndBombPos(levelIndex:number):number[]\r\n    {\r\n        return this.StringToNumberArray(this.levelData[levelIndex].shootPos);\r\n    }\r\n\r\n\r\n    public GetBallAndBombShootSeq(levelIndex:number):number[]\r\n    {\r\n        return this.StringToNumberArray(this.levelData[levelIndex].shootSeq);\r\n    }\r\n\r\n\r\n    public GetBallAndBombShootAngle(levelIndex:number):number[]\r\n    {\r\n        return this.StringToNumberArray(this.levelData[levelIndex].shootAngle);\r\n    }\r\n\r\n\r\n    //字符串转换成数组\r\n    public StringToNumberArray(str:string):number[]\r\n    {\r\n        var num : number[] = [];\r\n        var numStr = str.split('_');\r\n        for(var i = 0; i < numStr.length; i++)\r\n        {\r\n            num.push(Number(numStr[i]));      \r\n        }\r\n\r\n        return num;\r\n    }\r\n\r\n}\r\n"]}