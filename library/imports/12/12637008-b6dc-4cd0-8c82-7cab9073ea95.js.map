{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\raphael\\component\\optional/assets\\raphael\\component\\optional\\R.svg.js"],"names":["cheerio","require","trim","s","replace","compressSpaces","toNumberArray","a","split","i","length","parseFloat","parseStyle","current","name","value","fillColor","cc","hexToColor","strokeColor","lineWidth","lineJoin","Graphics","LineJoin","toUpperCase","lineCap","LineCap","dashArray","dashOffset","parseNode","node","parent","tagName","addGroup","addPath","path","attribs","d","transform","data","type","position","v2","rotation","scale","styles","style","property","hasOwnProperty","children","ii","child","Svg","loadSvg","string","$","load","err","error","toString","svg","flipY","DomHandler","NodePrototype","ElementPrototype","prototype","_addDomElement","element","_tagStack","siblings","dom","previousSibling","next","_options","withStartIndices","startIndex","_parser","withDomLvl1","originElement","Object","create","k","prev","push","module","exports"],"mappings":"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","file":"R.svg.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\raphael\\component\\optional","sourcesContent":["var cheerio = require('cheerio');\r\n\r\nfunction trim (s) { \r\n    return s.replace(/^\\s+|\\s+$/g, ''); \r\n}\r\n\r\nfunction compressSpaces (s) { \r\n    return s.replace(/[\\s\\r\\t\\n]+/gm,' '); \r\n}\r\n\r\nfunction toNumberArray (s) {\r\n    var a = trim(compressSpaces((s || '').replace(/,/g, ' '))).split(' ');\r\n    for (var i=0; i<a.length; i++) {\r\n        a[i] = parseFloat(a[i]);\r\n    }\r\n    return a;\r\n}\r\n\r\nfunction parseStyle (current, name, value) {\r\n    if (name === 'fill') {\r\n        current.fillColor = value === 'none' ? null : cc.hexToColor(value);\r\n    } else if (name === 'stroke') {\r\n        current.strokeColor = value === 'none' ? null : cc.hexToColor(value);\r\n    } else if (name === 'stroke-width') {\r\n        current.lineWidth = parseFloat(value);\r\n    } else if (name === 'stroke-linejoin') {\r\n        current.lineJoin = cc.Graphics.LineJoin[value.toUpperCase()];\r\n    } else if (name === 'stroke-linecap') {\r\n        current.lineCap = cc.Graphics.LineCap[value.toUpperCase()];\r\n    } else if (name === 'stroke-dasharray') {\r\n        current.dashArray = toNumberArray[value];\r\n    } else if (name === 'stroke-dashoffset') {\r\n        current.dashOffset = parseFloat(value);\r\n    } /* else {\r\n        cc.log(\"Unhandled style: \" + name + \" -- \" + value);\r\n    } */\r\n}\r\n\r\nfunction parseNode (node, parent) {\r\n    var current;\r\n\r\n    var tagName = node.tagName;\r\n    if (tagName === 'g') {\r\n        current = parent.addGroup();\r\n    }\r\n    else if (tagName === 'path') {\r\n        current = parent.addPath();\r\n        current.path(node.attribs.d);\r\n    }\r\n\r\n    if (current && node.attribs) {\r\n        // transform\r\n        var transform = node.attribs.transform;\r\n        if (transform) {\r\n            var data = trim(compressSpaces(transform)).replace(/\\)([a-zA-Z])/g, ') $1').replace(/\\)(\\s?,\\s?)/g,') ').split(/\\s(?=[a-z])/);\r\n            for (var i=0; i<data.length; i++) {\r\n                var type = trim(data[i].split('(')[0]);\r\n                var s = data[i].split('(')[1].replace(')','');\r\n                var a = toNumberArray(s);\r\n                \r\n                if (type === 'translate') {\r\n                    current.position = cc.v2(a[0], a[1]);\r\n                }\r\n                else if (type === 'rotate') {\r\n                    current.rotation = a[0];\r\n                }\r\n                else if (type === 'scale') {\r\n                    current.scale = cc.v2(a[0], a[1]);\r\n                }\r\n            }\r\n        }\r\n\r\n        var styles = node.attribs.style;\r\n        if (styles) {\r\n            styles = styles.split(';');\r\n            for (var i=0; i<styles.length; i++) {\r\n                if (trim(styles[i]) !== '') {\r\n                    var style = styles[i].split(':');\r\n                    var name = trim(style[0]);\r\n                    var value = trim(style[1]);\r\n\r\n                    parseStyle(current, name, value);\r\n                }\r\n            }\r\n        }\r\n\r\n        for (var property in node.attribs) {\r\n            if (node.attribs.hasOwnProperty(property)) {\r\n                parseStyle(current, property, node.attribs[property]);\r\n            }\r\n        }\r\n    }\r\n\r\n    var children = node.children;\r\n    if (children) {\r\n        for (var i = 0, ii = children.length; i < ii; i++) {\r\n            var child = children[i];\r\n            parseNode(child, current || parent);\r\n        }\r\n    }\r\n}\r\n\r\nvar Svg = {\r\n    loadSvg: function (string) {\r\n        if (typeof string !== 'string') {\r\n            return;\r\n        }\r\n\r\n        var $;\r\n        try {\r\n            $ = cheerio.load(string);\r\n        }\r\n        catch (err) {\r\n            cc.error(err.toString());\r\n            return;\r\n        }\r\n\r\n        var svg = $('svg')[0];\r\n        parseNode(svg, this);\r\n\r\n        this.flipY = true;\r\n    },\r\n};\r\n\r\n\r\n// hack for jsb, not use __proto__\r\nvar DomHandler = require('domhandler');\r\nvar NodePrototype = require(\"domhandler/lib/node\");\r\nvar ElementPrototype = require(\"domhandler/lib/element\");\r\n\r\nDomHandler.prototype._addDomElement = function(element){\r\n    var parent = this._tagStack[this._tagStack.length - 1];\r\n    var siblings = parent ? parent.children : this.dom;\r\n    var previousSibling = siblings[siblings.length - 1];\r\n\r\n    element.next = null;\r\n\r\n    if(this._options.withStartIndices){\r\n        element.startIndex = this._parser.startIndex;\r\n    }\r\n\r\n    if (this._options.withDomLvl1) {\r\n\r\n        var originElement = element;\r\n        element = Object.create(element.type === \"tag\" ? ElementPrototype : NodePrototype);\r\n        for (var k in originElement) {\r\n            element[k] = originElement[k];\r\n        }\r\n\r\n        // element.__proto__ = element.type === \"tag\" ? ElementPrototype : NodePrototype;\r\n    }\r\n\r\n    if(previousSibling){\r\n        element.prev = previousSibling;\r\n        previousSibling.next = element;\r\n    } else {\r\n        element.prev = null;\r\n    }\r\n\r\n    siblings.push(element);\r\n    element.parent = parent || null;\r\n};\r\n\r\nmodule.exports = Svg;"]}