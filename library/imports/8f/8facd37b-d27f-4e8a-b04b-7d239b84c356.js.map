{"version":3,"sources":["..\\..\\..\\..\\assets\\Script/assets\\Script\\physicsNodeLogic.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["// Learn TypeScript:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/typescript.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/typescript/index.html\n// Learn Attribute:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/reference/attributes/index.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://www.cocos.com/docs/creator/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/editors_and_tools/creator-chapters/scripting/life-cycle-callbacks/index.html\n\nconst {ccclass, property} = cc._decorator;\nlet talefun = (<any>cc).talefun;\n\nimport MyPhysicsCollider = require(\"./MyPhysicsCollider\")\n\n@ccclass\nexport default class physicsNodeLogic extends cc.Component {\n\n    touchStartHandler: () => void;\n    touchMoveHandler: () => void;\n    touchEndHandler: () => void;\n    touchCancelHandler: () => void;\n\n    path: cc.Graphics = null;\n\n    points: cc.Vec2[] = [];\n    @property(MyPhysicsCollider)\n    physicsLine = null;\n    @property(cc.RigidBody)\n    rigibodyLogic: cc.RigidBody = null;\n    @property(Number)\n    pathWidth : number = 10;\n    @property(cc.color)\n    pathColor: cc.Color = cc.color(0,0,0);\n\n    // LIFE-CYCLE CALLBACKS:    \n    onLoad () {\n        this.path = this.addComponent(cc.Graphics);\n        this.path.strokeColor = this.pathColor;\n        this.path.lineWidth = this.pathWidth;\n\n        this.touchStartHandler = this.touchStart.bind(this);\n        this.touchMoveHandler = this.touchMove.bind(this);\n        this.touchEndHandler = this.touchEnd.bind(this);\n        this.touchCancelHandler = this.touchCancel.bind(this);\n\n        this.addTouch();\n    }\n\n    onDestroy() {\n        this.removeTouch();\n    }\n\n    addTouch() {\n        this.node.on(cc.Node.EventType.TOUCH_START, this.touchStartHandler);\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchMoveHandler);\n        this.node.on(cc.Node.EventType.TOUCH_END, this.touchEndHandler);\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.touchCancelHandler);\n    }\n\n    removeTouch() {\n        this.node.off(cc.Node.EventType.TOUCH_START, this.touchStartHandler);\n        this.node.off(cc.Node.EventType.TOUCH_MOVE, this.touchMoveHandler);\n        this.node.off(cc.Node.EventType.TOUCH_END, this.touchEndHandler);\n        this.node.off(cc.Node.EventType.TOUCH_CANCEL, this.touchCancelHandler);\n    }\n\n    touchStart(event : cc.Event.EventTouch) {\n\n        let touchLoc = event.getLocation();\n        touchLoc = this.node.parent.convertToNodeSpaceAR(touchLoc);\n\n        this.points.push(cc.p(touchLoc.x, touchLoc.y));\n        this.path.moveTo(touchLoc.x, touchLoc.y);\n        return true;\n    }\n\n    touchMove(event : cc.Event.EventTouch) {\n        let touchLoc = event.getLocation();\n        touchLoc = this.node.parent.convertToNodeSpaceAR(touchLoc);\n        let lastTouchLoc = this.points[this.points.length - 1];\n        this.points.push(cc.p(touchLoc.x, touchLoc.y));\n        this.path.lineTo(touchLoc.x, touchLoc.y);\n        cc.log(\"stroke\");\n                // this.path.moveTo(touchLoc.x, touchLoc.y);\n        this.path.stroke();\n    }\n\n    touchEnd(event : cc.Event.EventTouch) {\n         this.createRigibody();\n    }\n\n    touchCancel(event : cc.Event.EventTouch) {\n        this.createRigibody();\n    }\n\n    checkIsCanDraw(lastPoint: cc.Vec2, nowPoint: cc.Vec2) {\n        return cc.pDistance(lastPoint, nowPoint) >= 20;\n    }\n\n    \n    createRigibody()\n     {\n        this.physicsLine.lineWidth = this.path.lineWidth;\n        this.physicsLine.points = this.points;\n        this.physicsLine.apply();\n        \n    }\n\n    getSegmenPos(beginPos: cc.Vec2, endPos: cc.Vec2) {\n        let k = (endPos.y - beginPos.y) / (endPos.x - beginPos.x);\n        let offX = 0;\n        let offY = 0;\n        if (k === 0) {\n            offY = this.path.lineWidth / 2;\n            offX = 0;\n\n            if (endPos.x < beginPos.x) {\n                offX = -offX;\n                offY = -offY;\n            }\n        }\n        else if (!isFinite(k)) {\n            offX = this.path.lineWidth / 2;\n            offY = 0;\n        } else {\n            let k1 = -1 / k;\n\n            let angle = Math.atan(k1);\n            let sin = Math.sin(angle);\n            let cos = Math.cos(angle);\n            cc.log(\"angle\" + angle);\n\n            offX = this.path.lineWidth / 2 * cos;\n            offY = this.path.lineWidth / 2 * sin;\n        }\n\n        if (endPos.y > beginPos.y) {\n            offX = -offX;\n            offY = -offY;\n        }\n\n        let beingPosArr = [cc.p(beginPos.x - offX, beginPos.y - offY), cc.p(endPos.x - offX, endPos.y - offY)];\n        let endPosArr = [cc.p(beginPos.x + offX, beginPos.y + offY), cc.p(endPos.x + offX, endPos.y + offY)];\n\n        return {\n            beginPosArr : beingPosArr,\n            endPosArr : endPosArr\n        };\n    }\n}\n"]}