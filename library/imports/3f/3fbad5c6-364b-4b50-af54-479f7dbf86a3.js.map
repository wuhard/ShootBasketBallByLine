{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\raphael\\utils/assets\\raphael\\utils\\R.curve.js"],"names":["pathCommand","pathValues","concat","apply","split","has","toFloat","parseFloat","mmax","Math","max","mmin","min","PI","abs","math","pow","upperCase","String","prototype","toUpperCase","cache","string2curve","string2path","clone","obj","Object","res","constructor","key","a2c","x1","y1","rx","ry","angle","large_arc_flag","sweep_flag","x2","y2","recursive","_120","rad","xy","rotate","x","y","X","cos","sin","Y","h","sqrt","rx2","ry2","k","cx","cy","f1","asin","toFixed","f2","df","f2old","x2old","y2old","c1","s1","c2","s2","t","tan","hx","hy","m1","m2","m3","m4","join","newres","i","ii","length","l2c","q2c","ax","ay","_13","_23","parsePathString","pathString","paramCounts","a","c","l","m","r","q","s","v","z","data","replace","b","params","name","toLowerCase","push","splice","path2absolute","pathArray","mx","my","start","crz","pa","call","dots","slice","j","jj","pop","catmullRom2bezier","kk","path2curve","pathString2","p","p2","attrs","bx","by","qx","qy","attrs2","processPath","path","d","pcom","nx","ny","tq","T","Q","fixArc","pp","shift","pi","pcoms1","pcoms2","fixM","path1","path2","a1","a2","pfirst","seg","seg2","seglen","seg2len","module","exports"],"mappings":"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","file":"R.curve.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\raphael\\utils","sourcesContent":["'use strict';\r\n\r\nvar pathCommand = /([achlmrqstvz])[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)/ig;\r\nvar pathValues = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*/ig;\r\n\r\nvar concat = 'concat';\r\nvar apply  = 'apply';\r\nvar split  = 'split';\r\nvar has    = 'hasOwnProperty';\r\n\r\nvar toFloat = parseFloat;\r\n\r\nvar mmax = Math.max;\r\nvar mmin = Math.min;\r\nvar PI   = Math.PI;\r\nvar abs  = Math.abs;\r\nvar math = Math;\r\nvar pow  = Math.pow;\r\n\r\nvar upperCase = String.prototype.toUpperCase;\r\n\r\nvar cache = {\r\n    string2curve: {},\r\n    string2path: {}\r\n};\r\n\r\nfunction clone (obj) {\r\n    if (typeof obj === 'function' || Object(obj) !== obj) {\r\n        return obj;\r\n    }\r\n    var res = new obj.constructor();\r\n    for (var key in obj) if (obj[has](key)) {\r\n        res[key] = clone(obj[key]);\r\n    }\r\n    return res;\r\n}\r\n\r\nvar a2c = function (x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\r\n    // for more information of where this math came from visit:\r\n    // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\r\n    var _120 = PI * 120 / 180,\r\n        rad = PI / 180 * (+angle || 0),\r\n        res = [],\r\n        xy,\r\n        rotate = function (x, y, rad) {\r\n            var X = x * math.cos(rad) - y * math.sin(rad),\r\n                Y = x * math.sin(rad) + y * math.cos(rad);\r\n            return {x: X, y: Y};\r\n        };\r\n    if (!recursive) {\r\n        xy = rotate(x1, y1, -rad);\r\n        x1 = xy.x;\r\n        y1 = xy.y;\r\n        xy = rotate(x2, y2, -rad);\r\n        x2 = xy.x;\r\n        y2 = xy.y;\r\n        var cos = math.cos(PI / 180 * angle),\r\n            sin = math.sin(PI / 180 * angle),\r\n            x = (x1 - x2) / 2,\r\n            y = (y1 - y2) / 2;\r\n        var h = (x * x) / (rx * rx) + (y * y) / (ry * ry);\r\n        if (h > 1) {\r\n            h = math.sqrt(h);\r\n            rx = h * rx;\r\n            ry = h * ry;\r\n        }\r\n        var rx2 = rx * rx,\r\n            ry2 = ry * ry,\r\n            k = (large_arc_flag === sweep_flag ? -1 : 1) *\r\n                math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\r\n            cx = k * rx * y / ry + (x1 + x2) / 2,\r\n            cy = k * -ry * x / rx + (y1 + y2) / 2,\r\n            f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\r\n            f2 = math.asin(((y2 - cy) / ry).toFixed(9));\r\n\r\n        f1 = x1 < cx ? PI - f1 : f1;\r\n        f2 = x2 < cx ? PI - f2 : f2;\r\n        f1 < 0 && (f1 = PI * 2 + f1);\r\n        f2 < 0 && (f2 = PI * 2 + f2);\r\n        if (sweep_flag && f1 > f2) {\r\n            f1 = f1 - PI * 2;\r\n        }\r\n        if (!sweep_flag && f2 > f1) {\r\n            f2 = f2 - PI * 2;\r\n        }\r\n    } else {\r\n        f1 = recursive[0];\r\n        f2 = recursive[1];\r\n        cx = recursive[2];\r\n        cy = recursive[3];\r\n    }\r\n    var df = f2 - f1;\r\n    if (abs(df) > _120) {\r\n        var f2old = f2,\r\n            x2old = x2,\r\n            y2old = y2;\r\n        f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\r\n        x2 = cx + rx * math.cos(f2);\r\n        y2 = cy + ry * math.sin(f2);\r\n        res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\r\n    }\r\n    df = f2 - f1;\r\n    var c1 = math.cos(f1),\r\n        s1 = math.sin(f1),\r\n        c2 = math.cos(f2),\r\n        s2 = math.sin(f2),\r\n        t = math.tan(df / 4),\r\n        hx = 4 / 3 * rx * t,\r\n        hy = 4 / 3 * ry * t,\r\n        m1 = [x1, y1],\r\n        m2 = [x1 + hx * s1, y1 - hy * c1],\r\n        m3 = [x2 + hx * s2, y2 - hy * c2],\r\n        m4 = [x2, y2];\r\n    m2[0] = 2 * m1[0] - m2[0];\r\n    m2[1] = 2 * m1[1] - m2[1];\r\n    if (recursive) {\r\n        return [m2, m3, m4][concat](res);\r\n    } else {\r\n        res = [m2, m3, m4][concat](res).join()[split](',');\r\n        var newres = [];\r\n        for (var i = 0, ii = res.length; i < ii; i++) {\r\n            newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\r\n        }\r\n        return newres;\r\n    }\r\n};\r\n\r\nvar l2c = function (x1, y1, x2, y2) {\r\n    return [x1, y1, x2, y2, x2, y2];\r\n};\r\n\r\nvar q2c = function (x1, y1, ax, ay, x2, y2) {\r\n    var _13 = 1 / 3,\r\n        _23 = 2 / 3;\r\n    return [\r\n        _13 * x1 + _23 * ax,\r\n        _13 * y1 + _23 * ay,\r\n        _13 * x2 + _23 * ax,\r\n        _13 * y2 + _23 * ay,\r\n        x2,\r\n        y2\r\n    ];\r\n};\r\n\r\nvar parsePathString = function (pathString) {\r\n    if (!pathString) {\r\n        return null;\r\n    }\r\n\r\n    if (typeof pathString !== 'string') {\r\n        return pathString;\r\n    }\r\n\r\n    if ( cache.string2path[pathString] ) {\r\n        return clone( cache.string2path[pathString] );\r\n    }\r\n\r\n    var paramCounts = {a: 7, c: 6, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, z: 0},\r\n        data = [];\r\n\r\n    String(pathString).replace(pathCommand, function (a, b, c) {\r\n        var params = [],\r\n            name = b.toLowerCase();\r\n        c.replace(pathValues, function (a, b) {\r\n            b && params.push(+b);\r\n        });\r\n        if (name === 'm' && params.length > 2) {\r\n            data.push([b][concat](params.splice(0, 2)));\r\n            name = 'l';\r\n            b = b === 'm' ? 'l' : 'L';\r\n        }\r\n        if (name === 'r') {\r\n            data.push([b][concat](params));\r\n        } else while (params.length >= paramCounts[name]) {\r\n            data.push([b][concat](params.splice(0, paramCounts[name])));\r\n            if (!paramCounts[name]) {\r\n                break;\r\n            }\r\n        }\r\n    });\r\n\r\n    return data;\r\n};\r\n\r\nvar path2absolute = function (pathString) {\r\n    var pathArray = parsePathString(pathString);\r\n    var res = [],\r\n        x = 0,\r\n        y = 0,\r\n        mx = 0,\r\n        my = 0,\r\n        start = 0;\r\n    if (pathArray[0][0] == 'M') {\r\n        x = +pathArray[0][1];\r\n        y = +pathArray[0][2];\r\n        mx = x;\r\n        my = y;\r\n        start++;\r\n        res[0] = ['M', x, y];\r\n    }\r\n    var crz = pathArray.length == 3 && pathArray[0][0] == 'M' && pathArray[1][0].toUpperCase() == 'R' && pathArray[2][0].toUpperCase() == 'Z';\r\n    for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\r\n        res.push(r = []);\r\n        pa = pathArray[i];\r\n        if (pa[0] != upperCase.call(pa[0])) {\r\n            r[0] = upperCase.call(pa[0]);\r\n            switch (r[0]) {\r\n                case 'A':\r\n                    r[1] = pa[1];\r\n                    r[2] = pa[2];\r\n                    r[3] = pa[3];\r\n                    r[4] = pa[4];\r\n                    r[5] = pa[5];\r\n                    r[6] = +(pa[6] + x);\r\n                    r[7] = +(pa[7] + y);\r\n                    break;\r\n                case 'V':\r\n                    r[1] = +pa[1] + y;\r\n                    break;\r\n                case 'H':\r\n                    r[1] = +pa[1] + x;\r\n                    break;\r\n                case 'R':\r\n                    var dots = [x, y][concat](pa.slice(1));\r\n                    for (var j = 2, jj = dots.length; j < jj; j++) {\r\n                        dots[j] = +dots[j] + x;\r\n                        dots[++j] = +dots[j] + y;\r\n                    }\r\n                    res.pop();\r\n                    res = res[concat](catmullRom2bezier(dots, crz));\r\n                    break;\r\n                case 'M':\r\n                    mx = +pa[1] + x;\r\n                    my = +pa[2] + y;\r\n                default:\r\n                    for (j = 1, jj = pa.length; j < jj; j++) {\r\n                        r[j] = +pa[j] + ((j % 2) ? x : y);\r\n                    }\r\n            }\r\n        } else if (pa[0] == 'R') {\r\n            dots = [x, y][concat](pa.slice(1));\r\n            res.pop();\r\n            res = res[concat](catmullRom2bezier(dots, crz));\r\n            r = ['R'][concat](pa.slice(-2));\r\n        } else {\r\n            for (var k = 0, kk = pa.length; k < kk; k++) {\r\n                r[k] = pa[k];\r\n            }\r\n        }\r\n        switch (r[0]) {\r\n            case 'Z':\r\n                x = mx;\r\n                y = my;\r\n                break;\r\n            case 'H':\r\n                x = r[1];\r\n                break;\r\n            case 'V':\r\n                y = r[1];\r\n                break;\r\n            case 'M':\r\n                mx = r[r.length - 2];\r\n                my = r[r.length - 1];\r\n            default:\r\n                x = r[r.length - 2];\r\n                y = r[r.length - 1];\r\n        }\r\n    }\r\n    \r\n    return res;\r\n};\r\n\r\nvar path2curve = function (pathString, pathString2) {\r\n    if ( typeof pathString === 'string' && !pathString2 && cache.string2curve[pathString] ) {\r\n        return clone( cache.string2curve[pathString] );\r\n    }\r\n\r\n    var p = path2absolute(pathString),\r\n        p2 = pathString2 && path2absolute(pathString2),\r\n        attrs = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\r\n        attrs2 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\r\n        processPath = function (path, d, pcom) {\r\n            var nx, ny, tq = {T:1, Q:1};\r\n            if (!path) {\r\n                return ['C', d.x, d.y, d.x, d.y, d.x, d.y];\r\n            }\r\n            !(path[0] in tq) && (d.qx = d.qy = null);\r\n            switch (path[0]) {\r\n                case 'M':\r\n                    d.X = path[1];\r\n                    d.Y = path[2];\r\n                    break;\r\n                case 'A':\r\n                    path = ['C'][concat](a2c[apply](0, [d.x, d.y][concat](path.slice(1))));\r\n                    break;\r\n                case 'S':\r\n                    if (pcom == 'C' || pcom == 'S') { // In 'S' case we have to take into account, if the previous command is C/S.\r\n                        nx = d.x * 2 - d.bx;          // And reflect the previous\r\n                        ny = d.y * 2 - d.by;          // command's control point relative to the current point.\r\n                    }\r\n                    else {                            // or some else or nothing\r\n                        nx = d.x;\r\n                        ny = d.y;\r\n                    }\r\n                    path = ['C', nx, ny][concat](path.slice(1));\r\n                    break;\r\n                case 'T':\r\n                    if (pcom == 'Q' || pcom == 'T') { // In 'T' case we have to take into account, if the previous command is Q/T.\r\n                        d.qx = d.x * 2 - d.qx;        // And make a reflection similar\r\n                        d.qy = d.y * 2 - d.qy;        // to case 'S'.\r\n                    }\r\n                    else {                            // or something else or nothing\r\n                        d.qx = d.x;\r\n                        d.qy = d.y;\r\n                    }\r\n                    path = ['C'][concat](q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\r\n                    break;\r\n                case 'Q':\r\n                    d.qx = path[1];\r\n                    d.qy = path[2];\r\n                    path = ['C'][concat](q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\r\n                    break;\r\n                case 'L':\r\n                    path = ['C'][concat](l2c(d.x, d.y, path[1], path[2]));\r\n                    break;\r\n                case 'H':\r\n                    path = ['C'][concat](l2c(d.x, d.y, path[1], d.y));\r\n                    break;\r\n                case 'V':\r\n                    path = ['C'][concat](l2c(d.x, d.y, d.x, path[1]));\r\n                    break;\r\n                case 'Z':\r\n                    path = ['C'][concat](l2c(d.x, d.y, d.X, d.Y));\r\n                    break;\r\n            }\r\n            return path;\r\n        },\r\n        fixArc = function (pp, i) {\r\n            if (pp[i].length > 7) {\r\n                pp[i].shift();\r\n                var pi = pp[i];\r\n                while (pi.length) {\r\n                    pcoms1[i]='A'; // if created multiple C:s, their original seg is saved\r\n                    p2 && (pcoms2[i]='A'); // the same as above\r\n                    pp.splice(i++, 0, ['C'][concat](pi.splice(0, 6)));\r\n                }\r\n                pp.splice(i, 1);\r\n                ii = mmax(p.length, p2 && p2.length || 0);\r\n            }\r\n        },\r\n        fixM = function (path1, path2, a1, a2, i) {\r\n            if (path1 && path2 && path1[i][0] == 'M' && path2[i][0] != 'M') {\r\n                path2.splice(i, 0, ['M', a2.x, a2.y]);\r\n                a1.bx = 0;\r\n                a1.by = 0;\r\n                a1.x = path1[i][1];\r\n                a1.y = path1[i][2];\r\n                ii = mmax(p.length, p2 && p2.length || 0);\r\n            }\r\n        },\r\n        pcoms1 = [], // path commands of original path p\r\n        pcoms2 = [], // path commands of original path p2\r\n        pfirst = '', // temporary holder for original path command\r\n        pcom = ''; // holder for previous path command of original path\r\n    for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\r\n        p[i] && (pfirst = p[i][0]); // save current path command\r\n\r\n        if (pfirst != 'C') // C is not saved yet, because it may be result of conversion\r\n        {\r\n            pcoms1[i] = pfirst; // Save current path command\r\n            i && ( pcom = pcoms1[i-1]); // Get previous path command pcom\r\n        }\r\n        p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\r\n\r\n        if (pcoms1[i] != 'A' && pfirst == 'C') pcoms1[i] = 'C'; // A is the only command\r\n        // which may produce multiple C:s\r\n        // so we have to make sure that C is also C in original path\r\n\r\n        fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\r\n\r\n        if (p2) { // the same procedures is done to p2\r\n            p2[i] && (pfirst = p2[i][0]);\r\n            if (pfirst != 'C')\r\n            {\r\n                pcoms2[i] = pfirst;\r\n                i && (pcom = pcoms2[i-1]);\r\n            }\r\n            p2[i] = processPath(p2[i], attrs2, pcom);\r\n\r\n            if (pcoms2[i]!='A' && pfirst=='C') pcoms2[i]='C';\r\n\r\n            fixArc(p2, i);\r\n        }\r\n        fixM(p, p2, attrs, attrs2, i);\r\n        fixM(p2, p, attrs2, attrs, i);\r\n        var seg = p[i],\r\n            seg2 = p2 && p2[i],\r\n            seglen = seg.length,\r\n            seg2len = p2 && seg2.length;\r\n        attrs.x = seg[seglen - 2];\r\n        attrs.y = seg[seglen - 1];\r\n        attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\r\n        attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\r\n        attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\r\n        attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\r\n        attrs2.x = p2 && seg2[seg2len - 2];\r\n        attrs2.y = p2 && seg2[seg2len - 1];\r\n    }\r\n\r\n    if ( typeof pathString === 'string' && !pathString2 ) {\r\n        cache.string2curve[pathString] = clone(p);\r\n    }\r\n\r\n    return p2 ? [p, p2] : p;\r\n};\r\n\r\nmodule.exports = {\r\n    path2absolute: path2absolute,\r\n    path2curve: path2curve\r\n};\r\n"]}